{"openapi":"3.0.2","info":{"title":"API Demo","version":"0.1.0"},"paths":{"/api/v1/users":{"get":{"tags":["users"],"summary":"List Items","description":" List users\n \n **Supports queries**\n\n `?q=[field]=[value],...`\n\n Multiple statements supported comma delimited.\n\n Equality operator is the default, for other operators they are encoded in the value separated by a `~`:\n\n `?[field]=[op]~[value]`\n\n Operators supported are:\n\n | Operator | Encoding | Meaning |\n | -- | -- | -- |\n | == | _none; default_ | Equality |\n | > | gt | Greater Than |\n | < | lt | Less Than |\n | >= | gte | Greater Than or Equal |\n | <= | lte | Less Than or Equal |\n | array_contains | ac | for fields that are arrays, return only items where the field contains value |\n\n Number or results returned can be limited with a limit querystring param\n \n **Examples**\n\n all users where foo == bar:  `?q=foo=bar`\n\n3 users where year greater than 2018 and features is an array that contains 'tall'\n\n`?q=year=gt~2018,features=ac~tall&limit=3`\n \n ","operationId":"list_items_api_v1_users_get","parameters":[{"required":false,"schema":{"title":"Q","default":""},"name":"q","in":"query"},{"required":false,"schema":{"title":"Limit","type":"integer","default":100},"name":"limit","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response List Items Api V1 Users Get","type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/users/":{"post":{"tags":["users"],"summary":"Create Item","description":"Create an item given an filled version of the model\n\n**NOTE** id should be empty on post","operationId":"create_item_api_v1_users__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/users/{id}":{"get":{"tags":["users"],"summary":"Read Item","description":"Get an Item by ID","operationId":"read_item_api_v1_users__id__get","parameters":[{"required":true,"schema":{"title":"Id","type":"string"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["users"],"summary":"Delete Item","description":"Delete an item given the ID","operationId":"delete_item_api_v1_users__id__delete","parameters":[{"required":true,"schema":{"title":"Id","type":"string"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/cars":{"get":{"tags":["cars"],"summary":"List Items","description":" List cars\n \n **Supports queries**\n\n `?q=[field]=[value],...`\n\n Multiple statements supported comma delimited.\n\n Equality operator is the default, for other operators they are encoded in the value separated by a `~`:\n\n `?[field]=[op]~[value]`\n\n Operators supported are:\n\n | Operator | Encoding | Meaning |\n | -- | -- | -- |\n | == | _none; default_ | Equality |\n | > | gt | Greater Than |\n | < | lt | Less Than |\n | >= | gte | Greater Than or Equal |\n | <= | lte | Less Than or Equal |\n | array_contains | ac | for fields that are arrays, return only items where the field contains value |\n\n Number or results returned can be limited with a limit querystring param\n \n **Examples**\n\n all cars where foo == bar:  `?q=foo=bar`\n\n3 cars where year greater than 2018 and features is an array that contains 'tall'\n\n`?q=year=gt~2018,features=ac~tall&limit=3`\n \n ","operationId":"list_items_api_v1_cars_get","parameters":[{"required":false,"schema":{"title":"Q","default":""},"name":"q","in":"query"},{"required":false,"schema":{"title":"Limit","type":"integer","default":100},"name":"limit","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response List Items Api V1 Cars Get","type":"array","items":{"$ref":"#/components/schemas/Car"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/cars/":{"post":{"tags":["cars"],"summary":"Create Item","description":"Create an item given an filled version of the model\n\n**NOTE** id should be empty on post","operationId":"create_item_api_v1_cars__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Car"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Car"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/cars/{id}":{"get":{"tags":["cars"],"summary":"Read Item","description":"Get an Item by ID","operationId":"read_item_api_v1_cars__id__get","parameters":[{"required":true,"schema":{"title":"Id","type":"string"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Car"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["cars"],"summary":"Delete Item","description":"Delete an item given the ID","operationId":"delete_item_api_v1_cars__id__delete","parameters":[{"required":true,"schema":{"title":"Id","type":"string"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"Car":{"title":"Car","required":["year"],"type":"object","properties":{"id":{"title":"Id","type":"string"},"make":{"title":"Make","type":"string","default":""},"model":{"title":"Model","type":"string","default":""},"year":{"title":"Year","type":"integer"},"body_styles":{"title":"Body Styles","type":"array","items":{"type":"string"},"default":[]}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"User":{"title":"User","type":"object","properties":{"id":{"title":"Id","type":"string"},"first":{"title":"First","type":"string","default":"John"},"last":{"title":"Last","type":"string","default":"Doe"}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"type":"string"}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}}}